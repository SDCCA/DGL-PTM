[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "dgl_ptm"
version = "0.1.0"
requires-python = ">=3.11, <3.12"
dependencies = [
    "numpy",
    "scipy==1.10.1",
    "pydantic>=2",
    "torch==2.1.1",
    "torchdata==0.7.1", # see issue 101
    "torchvision",
    "torchaudio",
    "xarray",
    "zarr",
    "dask",
    "dgl",
]
description = "The deep graph library reimplementation of the poverty trap model."
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Meiert Willem Grootes", email = "m.grootes@esciencecenter.nl"},
    {name = "Pranav Chandramouli"},
    {name = "Thijs van Lankveld"},
    {name = "Fakhereh Sarah Alidoost"},
    {name = "Debraj Roy"},
    {name = "Sonja Georgievska"},
]
keywords = ["graph", "poverty", "trap", "Agent-based model"]
classifiers=[
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3.11',
]

[project.urls]
repository = "https://github.com/SDCCA/DGL-PTM/"
# doi = ""
documentation = "https://github.com/SDCCA/DGL-PTM/blob/master/README.md"
changelog = "https://github.com/SDCCA/DGL-PTM/CHANGELOG/"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pycodestyle",
    "ruff",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-jupyter",
    "mkdocstrings[python]",
    "mkdocs-gen-files",
]
demo = [
    "jupyterlab",
]

[tool.setuptools]
packages = ["dgl_ptm"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --cov-report term"
testpaths = [
    "tests",
]

[tool.coverage.run]
branch = true
source = ["dgl_ptm"]

[tool.ruff]
select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "D",  # pydocstyle
  "I",  # isort
  "N",  # PEP8-naming
  "UP",  # pyupgrade (upgrade syntax to current syntax)
  "PLE",  # Pylint error https://github.com/charliermarsh/ruff#error-ple
  "PLR",  # Pylint refactor (e.g. too-many-arguments)
  "PLW",  # Pylint warning (useless-else-on-loop)
]
extend-select = [
  "D401",  # First line should be in imperative mood
  "D400",  # First line should end in a period.
  "TID252",  # No relative imports (not pep8 compliant)
]
ignore = [
  "PLR2004",  # magic value used in comparsion.
  "PLR0913",  # too many arguments
]

line-length = 88

exclude = ["docs", "build"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"

[tool.ruff.per-file-ignores]
"tests/**" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10
